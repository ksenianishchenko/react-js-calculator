{"version":3,"sources":["components/button/button.js","App.js","components/display/display.js","index.js"],"names":["Button","props","name","handleClick","classAdd","className","onClick","App","useState","data","setData","arrayOfOperators","resetData","calculateData","result","eval","evt","pressedValue","target","lastSymbol","slice","includes","substring","concat","value","Display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHAAA,sBAWeA,IARA,SAACC,GACd,IAAOC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,YAAaC,EAAYH,EAAZG,SAE1B,OAAO,wBAAQC,UAAS,iBAAYD,GAAYF,KAAMA,EAAMI,QAASH,EAA9D,SACJD,M,q6BCDL,SAASK,MAEP,cAAwBC,oDAAS,IAAjC,0LAAOC,KAAP,cAAaC,QAAb,cAEIC,iBAAmB,CAAC,IAAK,IAAK,IAAK,KAEjCC,UAAY,WAChBF,QAAQ,KAGJG,cAAgB,SAAhBA,gBAEJ,GAAIJ,MAAiB,MAATA,MAAyB,MAATA,MAAyB,MAATA,MAAyB,MAATA,KAAc,CACxE,IAAIK,OAASC,KAAKN,MAClBC,QAAQI,OAAS,SAEjBF,aAKET,YAAc,SAACa,GAEnB,IAAIC,EAAeD,EAAIE,OAAOhB,KAC1BiB,EAAaV,KAAKW,OAAO,GAER,MAAjBH,EACFL,YAC0B,MAAjBK,EACTJ,gBACSF,iBAAiBU,SAASF,IAAeR,iBAAiBU,SAASJ,GAE5EP,QAAQD,MAGRC,QAFkB,MAATD,MAAyB,MAATA,MAAyB,MAATA,MAAyB,MAATA,MAAyB,MAATA,KAEjEA,KAAKa,UAAU,GAAKL,EAGpBR,KAAKc,OAAON,KAIxB,OACE,kEAAKZ,UAAU,MAAf,SACE,mEAAKA,UAAU,iBAAf,UACE,iEAAIA,UAAU,eAAd,wBACA,mEAAKA,UAAU,YAAf,UACE,2DAAC,2DAAD,CAASmB,MAAgB,KAATf,KAAcA,KAAO,MACrC,mEAAKJ,UAAU,eAAf,UACE,mEAAKA,UAAU,mBAAf,UACE,2DAAC,yDAAD,CAAQF,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,SAE1C,mEAAKG,UAAU,sBAAf,UACE,2DAAC,yDAAD,CAAQF,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MAExC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MAGxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,MAGxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,IAAKE,SAAU,UACvD,2DAAC,yDAAD,CAAQD,YAAaA,YAAaD,KAAM,MACxC,2DAAC,yDAAD,CAAQC,YAAaA,YAAaD,KAAM,IAAKE,SAAU,sBAStDG,2B,6BCvFf,sBAWekB,IAPC,SAACxB,GAEf,IAAOuB,EAASvB,EAATuB,MAEP,OAAO,qBAAKnB,UAAU,UAAf,SAA0BmB,M,8BCRnC,iEAKAE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a0cc8af7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.css\";\r\n\r\nconst Button = (props) => {\r\n  const {name, handleClick, classAdd} = props;\r\n\r\n  return <button className={`button ${classAdd}`} name={name} onClick={handleClick}>\r\n    {name}\r\n  </button>\r\n}\r\n\r\nexport default Button;","import React, {useState} from \"react\";\r\nimport Button from './components/button/button';\r\nimport Display from \"./components/display/display\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  let arrayOfOperators = [\"-\", \"+\", \"/\", \"*\"];\r\n\r\n  const resetData = () => {\r\n    setData(\"\");\r\n  }\r\n\r\n  const calculateData = () => {\r\n    // evaluate from string\r\n    if (data && data !== \"-\" && data !== \"+\" && data !== \"/\" && data !== \"*\") {\r\n      let result = eval(data);\r\n      setData(result + \"\");\r\n    } else {\r\n      resetData();\r\n    }\r\n\r\n  }\r\n\r\n  const handleClick = (evt) => {\r\n    //alert(evt.target.name);\r\n    let pressedValue = evt.target.name;\r\n    let lastSymbol = data.slice(-1);\r\n\r\n    if (pressedValue === \"C\") {\r\n      resetData();\r\n    } else if (pressedValue === \"=\") {\r\n      calculateData();\r\n    } else if (arrayOfOperators.includes(lastSymbol) && arrayOfOperators.includes(pressedValue)) {\r\n      // don't change data\r\n      setData(data);\r\n    } else if (data === \"0\" || data === \"-\" || data === \"+\" || data === \"/\" || data === \"*\") {\r\n      // should start from number\r\n      setData(data.substring(1) + pressedValue);\r\n    } else {\r\n      // create a string to show on display\r\n      setData(data.concat(pressedValue));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main-container\">\r\n        <h1 className=\"hidden-title\">Calculator</h1>\r\n        <div className=\"container\">\r\n          <Display value={data !== \"\" ? data : \"0\"}/>\r\n          <div className=\"buttons-wrap\">\r\n            <div className=\"buttons-wrap-top\">\r\n              <Button handleClick={handleClick} name={\"+\"} />\r\n              <Button handleClick={handleClick} name={\"-\"} />\r\n              <Button handleClick={handleClick} name={\"*\"} />\r\n              <Button handleClick={handleClick} name={\"/\"} />\r\n            </div>\r\n            <div className=\"buttons-wrap-bottom\">\r\n              <Button handleClick={handleClick} name={\"1\"} />\r\n              <Button handleClick={handleClick} name={\"2\"} />\r\n              <Button handleClick={handleClick} name={\"3\"} />\r\n\r\n              <Button handleClick={handleClick} name={\"4\"} />\r\n              <Button handleClick={handleClick} name={\"5\"} />\r\n              <Button handleClick={handleClick} name={\"6\"} />\r\n              \r\n\r\n              <Button handleClick={handleClick} name={\"7\"} />\r\n              <Button handleClick={handleClick} name={\"8\"} />\r\n              <Button handleClick={handleClick} name={\"9\"} />\r\n              \r\n\r\n              <Button handleClick={handleClick} name={\"C\"} classAdd={\"green\"}/>\r\n              <Button handleClick={handleClick} name={\"0\"} />\r\n              <Button handleClick={handleClick} name={\"=\"} classAdd={\"red\"}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport \"./display.css\";\r\n\r\nconst Display = (props) => {\r\n\r\n  const {value} = props;\r\n\r\n  return <div className=\"display\">{value}</div>\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}